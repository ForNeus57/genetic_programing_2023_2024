[0]Best: 0, Worst: 68062506, Average: 4743137.983501006, Time: 10.326404499995988
Best program: {
	if (!((false || true))) {
		if ((!(true) && (true && false))) {
			write(((53 / 0) / (60 - 26)));
			bool X = !((-36 != -22));
			write(!(!(X)));
		} else {
			write(((42 >= -13) || (-63 != 55)));
			bool i = !((54 != 8));
			i = !((-41 > 51));
			read(i);
			read(i);
		}
		while (((true || false) && !(false))) {
			int eM = ((18 / -64) - (21 / 56));
			eM = ((eM / -8) / (-34 - -21));
		}
	} else {
		while (((-43 <= 41) || (-6 == -55))) {
			write(((-5 + -10) <= (-15 - -16)));
			write(((60 - -46) / (11 * -50)));
			write(((62 - 60) - (29 - 28)));
			int Q = ((54 + 50) + (21 - 38));
			Q = ((-62 - -60) / (Q - Q));
		}
		if (((-60 + -7) < (-7 / 17))) {
			bool s7y = !(!(false));
			int VV_ = ((-55 * -59) * (55 - -57));
			VV_ = ((63 + VV_) + (VV_ - VV_));
		} else {
			write(((43 > 58) && !(true)));
			int R = ((28 * -20) * (9 / 4));
			bool eVU = !((false || false));
		}
		if (((13 + -14) != (11 + -55))) {
			write(!(!(true)));
			bool l = !((-15 == -57));
			int uw3Xp = ((-37 / 46) - (-58 + 16));
			int Pr = ((uw3Xp - -39) / (17 + -1));
		} else {
			write(!((11 > -49)));
			bool Y = ((9 - -32) != (59 * 58));
		}
		while (!((true || true))) {
			bool wkOZ = !((0 <= -16));
			int yF = ((-20 - -38) - (-44 + 23));
			int c8k = ((-36 * yF) / (-49 / yF));
		}
	}
	while (((2 - -36) != (31 + -24))) {
		if (((14 + 50) == (26 * -25))) {
			write(((-25 - 34) - (15 / -2)));
			write(((39 - 0) - (-51 + -16)));
		} else {
			write(((-22 + -3) * (-56 - -28)));
			int Ueb = ((15 + 22) + (29 / 6));
		}
	}
	if (((-64 == 7) && (-10 < -55))) {
		if ((!(false) && (false && false))) {
			int l = ((23 - -12) + (-37 - -63));
			int kh6 = ((-31 / l) - (l - -49));
			l = ((l - 56) / (l * l));
		} else {
			write(((10 > 33) && (true || false)));
		}
		if (((3 * -43) == (-30 + -4))) {
			int fdu = ((17 - -54) + (-35 + -9));
			int x = ((57 / fdu) - (fdu * -40));
			read(fdu);
			int HJTo = ((16 + x) * (19 * -23));
		} else {
			int U9LO = ((63 / 42) + (-42 * 51));
		}
		while (((true && false) || (true && false))) {
			bool Nd = ((false && true) && !(true));
			bool A2 = ((-2 / -55) > (41 + -8));
			read(A2);
			Nd = (!(true) && (-17 < -53));
			bool Wtj = !((Nd || true));
		}
		if (((39 + 18) >= (40 + -37))) {
			bool dSqt = ((2 * 23) == (-43 + 22));
			bool APln = ((45 - 60) <= (7 + 4));
			read(dSqt);
			dSqt = (!(APln) || (true || false));
			APln = !((true && false));
		} else {
			bool Jv = !(!(true));
			write(((33 - -63) - (-10 - -53)));
			int X1 = ((-13 - -47) * (-63 / 52));
			int bQ = ((X1 * X1) / (52 - X1));
			bool K = ((X1 > 51) || (Jv || Jv));
		}
		if (!(!(false))) {
			write(!((-1 == 42)));
			bool T = ((-43 - -22) > (63 + 42));
		} else {
			int gT4NY7b4 = ((-41 / 18) * (-43 - 57));
			bool zg = ((27 > -44) && (false && true));
		}
	} else {
		while (!((false || true))) {
			bool A = !((1 >= -16));
			write((!(A) || (A && A)));
			int iVp = ((-3 - -45) + (27 + 39));
		}
		if (((true && true) && (4 <= -5))) {
			write(!(!(false)));
			bool GA = ((false && true) && (true || false));
			bool lRux = ((61 + -42) >= (18 + 54));
		} else {
			write(((-30 / -9) < (16 / 57)));
			int CFwGB = ((-29 - 2) - (24 + -56));
			int K05 = ((27 - 10) / (CFwGB - CFwGB));
			CFwGB = ((K05 / 27) + (K05 / K05));
		}
	}
	while (((21 / -33) <= (31 - -12))) {
		while (((41 * -62) == (-51 - 60))) {
			int dFb = ((37 - -63) - (-58 * 53));
			bool o1JRR = !((false || false));
			read(o1JRR);
			dFb = ((33 * -24) / (-62 - -8));
		}
		if (((62 > -24) && (-9 > 64))) {
			write(((29 * 47) <= (-36 - -20)));
			bool RKdO = ((40 != 23) || (false && true));
			bool UB = !((RKdO && false));
			int q = ((-47 / -28) * (61 - 58));
			int bTr = ((q / q) / (-3 * -8));
		} else {
			bool cRg = ((18 <= -62) || !(false));
			int SN = ((63 - -56) * (55 / 57));
			int y = ((SN / 12) + (SN / SN));
			bool p = ((cRg || cRg) && (35 <= 32));
			bool b6 = ((5 < y) && (45 <= 60));
		}
		if (((24 + -19) != (-29 * 17))) {
			bool Hk = !(!(false));
		} else {
			write(((-27 - -13) == (-28 * 12)));
			write(((-58 < 50) || (-32 > 28)));
			bool R = !((true || false));
			read(R);
			int J1 = ((9 / 40) / (7 + -52));
		}
	}
}
